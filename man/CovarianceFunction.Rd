% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CovarianceFunction.R
\name{CovarianceFunction}
\alias{CovarianceFunction}
\title{Covariance Function Class}
\description{
This provides a parent class for all covariance function classes for gpmss.
}
\details{
"A Gaussian process is completely specified by its mean function and
covariance function" (Rasmussen and Williams 2006, 13). The covariance
function gives the prior covariance between function outputs given two
sets of input values. A valid covariance function must be a positive
semi-definite kernel; see Rasmussen and Williams (2006), Chapter 4 for
details.

We implement the following covariance functions:
\describe{
\item{CovSEiso}{The isometric squared exponential covariance function.
This is also sometimes called the Gaussian kernel, the squared
exponential kernel, or the radial basis function.}
\item{CovSEard}{The squared exponential covariance function with
automatic relevance determination. This is also sometimes called the
anisotropic squared exponential kernel or covariance function.}
}

Users may also define their own covariance functions for use with gpmss
functions. A covariance function class must provide a \code{cov()} method,
a \code{parameter_derivative()} method, and a \code{input_derivative()}
method. It must have data members \code{hypers} and \code{name}.

The \code{cov()} method is used to actually call the covariance function.
The first argument should be \code{X}, the first set of inputs.
The second argument should be \code{Z}, the second set of inputs;
its default value should be \code{X}.
The third argument should be \code{hypers}, a numeric vector giving all the
hyperparameters of the covariance function; its default value should be
\code{NULL}, in which case, the data member \code{hypers} is utilized.
(We allow passing different hypers for convenience in hyperparameter
optimization).

The \code{parameter_derivative()} method is used to obtain the partial
derivatives of the covariance function with respect to each of its
hyperparameters. (This is useful for optimization). Its arguments should be
the same as the \code{cov()} method, with one additional argument,
\code{param}, giving the index of \code{hypers} of the parameter with
respect to which the derivative should be taken.

The \code{input_derivative()} method is used to obtain the partial
derivatives of the covariance function with respect to its inputs.
(This is useful for obtaining marginal effects). Its arguments should be
the same as the \code{cov()} method, with two additional arguments:
\code{dimension}, an integer vector of length one giving the dimension of X
with respect to which the derivative is being taken; and \code{order},
an integer vector of length one giving the order of partial derivative
desired.

Its constructor should take at least one argument, \code{hypers},
which will be stored as the data member \code{hypers}.
This should have a sane default, as many users may pass the class generator
to the constructor for a \code{\link{GPModel}} without explicitly
specifying hyperparameters. This should not cause much difficulty if the
user optimizes the hyperparameters, but a sane default should be provided
nonetheless.
The data member \code{hypers} should be a public member so that it can be
accessed and modified directly.

The data member \code{name} should be hard-coded within the class definition;
it is used for printing purposes (potentially in other functions). It should
be a public member so that it can be accessed directly.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{A character vector of length one giving the covariance
function's name}

\item{\code{hypers}}{A numeric vector giving the covariance function's
hyperparameters}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-cov}{\code{CovarianceFunction$cov()}}
\item \href{#method-parameter_derivative}{\code{CovarianceFunction$parameter_derivative()}}
\item \href{#method-input_derivative}{\code{CovarianceFunction$input_derivative()}}
\item \href{#method-new}{\code{CovarianceFunction$new()}}
\item \href{#method-clone}{\code{CovarianceFunction$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-cov"></a>}}
\if{latex}{\out{\hypertarget{method-cov}{}}}
\subsection{Method \code{cov()}}{
Compute function covariance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CovarianceFunction$cov(X, Z = X, hypers = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{The first set of input values (should be a numeric matrix)}

\item{\code{Z}}{The second set of input values (should be a numeric matrix);
The default is Z = X.}

\item{\code{hypers}}{A numeric vector giving hyperparameters for the
covariance function. If NULL (the default), the hypers data
member is used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-parameter_derivative"></a>}}
\if{latex}{\out{\hypertarget{method-parameter_derivative}{}}}
\subsection{Method \code{parameter_derivative()}}{
Compute partial derivatives of covariance function with respect to
its hyperparameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CovarianceFunction$parameter_derivative(X, Z = X, hypers = NULL, param = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{The first set of input values (should be a numeric matrix)}

\item{\code{Z}}{The second set of input values (should be a numeric matrix);
The default is Z = X.}

\item{\code{hypers}}{A numeric vector giving hyperparameters for the
covariance function. If NULL (the default), the hypers data
member is used.}

\item{\code{param}}{An integer vector of length one; which element of
\code{hypers} should the derivative be taken with respect to?
The default is 1}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-input_derivative"></a>}}
\if{latex}{\out{\hypertarget{method-input_derivative}{}}}
\subsection{Method \code{input_derivative()}}{
Compute partial derivatives of covariance function with respect to
its inputs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CovarianceFunction$input_derivative(
  X,
  Z = X,
  hypers = NULL,
  dimension = 1,
  order = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{X}}{The first set of input values (should be a numeric matrix)}

\item{\code{Z}}{The second set of input values (should be a numeric matrix);
The default is Z = X.}

\item{\code{hypers}}{A numeric vector giving hyperparameters for the
covariance function. If NULL (the default), the hypers data
member is used.}

\item{\code{dimension}}{an integer vector of length one giving the dimension
of X with respect to which the derivative is being taken; the
default is 1}

\item{\code{order}}{An integer vector of length one indicating whether the
first partial derivative (order = 1) is desired, or the cross
partial (order = 2); the default is 1}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new CovarianceFunction object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CovarianceFunction$new(hypers = numeric())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hypers}}{A numeric vector giving hyperparameters for the
covariance function.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CovarianceFunction$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
