% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GPR.R
\name{GPR}
\alias{GPR}
\title{Gaussian Process Regression Model for Exact Inference}
\description{
Exact inference for GP regression; this inference method can only be used
with a Gaussian likelihood (see \code{\link{LikGauss}})
}
\details{
In Gaussian process (GP) regression, we consider that our outcomes \eqn{y}
are noisy observations of an unknown function of the predictors \eqn{X}:

\deqn{
    y = f \left( X \right) + \varepsilon.
}{%
    y = f (X) + \epsilon.
}

We place a GP prior over the values of \eqn{f \left( X \right)}{f(X)},
which says that before observing \eqn{y}, we believe the values of
\eqn{f \left( X \right)}{f(X)} are distributed

\deqn{
    f \left( X \right)
    \sim
    \mathcal{N} \left(
        m \left( X \right),
        K \left( X, X \right)
    \right),
}{%
    f (X) ~ N ( m (X), K (X, X) ),
}

where \eqn{m \left( X \right)}{m ( X )} is a \link[=MeanFunction]{mean function}
and \eqn{K \left( X, X \right)}{K ( X, X )} is a
\link[=CovarianceFunction]{covariance function}.
In other words, the prior mean over function outputs is a function of the
predictors, as is the prior covariance over function outputs.
Application of Bayes' rule in conjunction with Gaussian identities gives
us the posterior distribution of the values of \eqn{f\left(X\right)}{f(X)}
after observing \eqn{y}. This is a flexible Bayesian non-parametric
framework to reason about the relationship between predictors and outcomes
without making strong functional form assumptions.

For GP regression, the posterior distribution has an analytical solution:

\deqn{
    f \mid y, X
    \sim
    \mathcal{N} \left(
        \mu + K K_y^{-1} \left( y - \mu \right),
        K - K K_y^{-1} K
    \right),
}{%
    f | y, X ~ N(\mu + K K_y^{-1} (y - \mu), K - K K_y^{-1} K),
}

where \eqn{K} denotes the prior covariance function
(and we have suprressed in the notation that here it is evaluated at
\eqn{X}), \eqn{\mu} is the prior mean of \eqn{f}, and
\eqn{K_y^{-1} = (K + \sigma_y^2 I)^{-1}}.
For new test cases \eqn{X_\ast}{X*}, \eqn{f_\ast}{f*} is distributed

\deqn{
    f_\ast \mid y, X, X_\ast
    \sim
    \mathcal{N} \left(
        \mu_\ast + K(X_\ast, X) K_y^{-1} \left( y - \mu \right),
        K(X_\ast) - K(X_\ast, X) K_y^{-1} K(X, X_\ast)
    \right),
}{%
    f* | y, X, X* ~ N(\mu* + K(X*, X) K_y^{-1} (y - \mu),
                     K(X*) - K(X*, X) K_y^{-1} K(X, X*)),
}

where \eqn{\mu_\ast}{\mu*} is the prior mean function evaluated at
\eqn{X_\ast}{X*}.
}
\examples{
## Simulate data
set.seed(123)
n <- 100
x <- rnorm(n, sd = 2)
y <- sin(x) + rnorm(n, sd = sqrt(0.1))
## Train model
m <- GPR$new(y ~ x)
## Visualize posterior over f at training points
plot(x, y, pch = "+", col = "#33333387")
curve(sin(x), lty = 2, add = TRUE)
o <- order(x)
lines(x[o], m$post_mean[o])
s <- sqrt(diag(m$post_cov))[o]
h <- m$post_mean[o] + 1.96 * s
l <- m$post_mean[o] - 1.96 * s
polygon(x = c(x[o], rev(x[o])), y = c(h, rev(l)),
        border = NA, col = "#87878733")
legend(x = -3, y = max(y) + 0.1, bty = "n",
       pch = c(3, NA, NA, 15), lty = c(NA, 2, 1, NA),
       col = c("#333333", "black", "black", "#87878733"),
       legend = c("Observations", "True f(x)", "Post. mean", "95\% CI"))
## Get negative log marginal likelihood of the model
m$nlml()
## Look at derivatives of negative log marginal likelihood wrt hypers
m$dnlml()

}
\section{Super class}{
\code{\link[gpmss:GPModel]{gpmss::GPModel}} -> \code{GPR}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{y}}{The outcomes; should be a numeric vector.
Depending on the model there may be further restrictions
on the nature of the data.
This field is usually generated automatically during object
construction and does not generally need to be interacted
with directly by the user.}

\item{\code{X}}{The predictors; should be a numeric matrix.
This field is usually generated automatically during object
construction and does not generally need to be interacted
with directly by the user.}

\item{\code{terms}}{The \code{\link[stats]{terms}} object related to the
formula provided in model construction (this is useful for
later prediction).}

\item{\code{force_all_levs}}{A logical vector of length one recording the
user's preference for dropping unused factor levels}

\item{\code{meanfun}}{The prior mean function; must be an object of class
\code{\link{MeanFunction}}}

\item{\code{covfun}}{The prior covariance function; must be an object of
class \code{\link{CovarianceFunction}}}

\item{\code{likfun}}{The likelihood function; must be an object of class
\code{\link{LikelihoodFunction}}}

\item{\code{L}}{A numeric matrix such that
\eqn{L L^T = K + \sigma_y^2 I}}

\item{\code{alpha}}{A numeric vector equal to
\eqn{(K + \sigma_y^2 I)^{-1} (y - \mu)}}

\item{\code{post_mean}}{A numeric vector giving the posterior mean at the
training data}

\item{\code{post_cov}}{A numeric vector giving the posterior covariance at
the training data}

\item{\code{prior_mean}}{A numeric vector giving the prior mean at the
training data}

\item{\code{marginal_effects}}{A list with an element for each predictor in
the model marginal effects have been requested for (via the
\code{margins()} method). Each element is a list of length two,
with an element "mean", each entry i of which gives the mean of
the distribution of the marginal effect of the predictor on the
ith observation, and an element "covariance", giving the
covariance matrix for the distribution of marginal effects of
that predictor.}

\item{\code{average_marginal_effects}}{A dataframe with a row for each
predictor in the model that marginal effects have been requested
for (via the \code{margins()} method) and columns:
"Variable", giving the name of the predictor;
"Mean", giving the mean of the average marginal effect of that
predictor;
"LB", giving the lower bound on the requested confidence
interval (see the \code{margins()} method);
and "UB", giving the upper bound on the CI.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{GPR$new()}}
\item \href{#method-train}{\code{GPR$train()}}
\item \href{#method-predict}{\code{GPR$predict()}}
\item \href{#method-nlml}{\code{GPR$nlml()}}
\item \href{#method-dnlml}{\code{GPR$dnlml()}}
\item \href{#method-margins}{\code{GPR$margins()}}
\item \href{#method-clone}{\code{GPR$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new GPModel object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$new(
  formula,
  data,
  likfun = LikGauss,
  meanfun = MeanZero,
  covfun = CovSEard,
  optimize = FALSE,
  force_all_levs = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{formula}}{A formula object giving the variable name of the
outcomes on the left-hand side and the predictors on the
right-hand side, a la \code{\link[stats]{lm}}}

\item{\code{data}}{An optional data frame where the variables in
\code{formula} are to be found. If not found there,
we search for the variables elsewhere, generally the
calling environment.}

\item{\code{likfun}}{An object inheriting from class
\code{\link{LikelihoodFunction}}, or a generator for such a
class. This is the likelihood function for the GP model.
This is restricted to be \code{\link{LikGauss}}.
If a generator is provided rather than an object,
an object will be created with the default value for the
hyperparameters.}

\item{\code{meanfun}}{An object inheriting from class
\code{\link{MeanFunction}}, or a generator for such a
class. This is the mean function for the GP prior (see Details).
The default is \code{\link{MeanZero}}.
If a generator is provided rather than an object,
an object will be created with the default value for the
hyperparameters.}

\item{\code{covfun}}{An object inheriting from class
\code{\link{CovarianceFunction}}, or a generator for such a
class.
This is the covariance function for the GP prior (see Details).
The default is \code{\link{CovSEard}}.
If a generator is provided rather than an object,
an object will be created with the default value for the
hyperparameters.}

\item{\code{optimize}}{A logical vector of length one; if \code{TRUE},
the hyperparameters of the mean, covariance, and likelihood
functions are optimized automatically as part of the model
construction process (see Details).
The default is \code{FALSE}, meaning the hyperparameters given
at the time of creating those objects are used for inference.}

\item{\code{force_all_levs}}{A logical vector of length one; if \code{TRUE},
unused factor levels in right-hand side variables are
\strong{not} dropped. The default is \code{FALSE}.}

\item{\code{...}}{Other arguments specific to a particular model;
see the help file for specific models for more details.
Train the GP model, providing a characterization of the posterior
of the function of interest at the input values given in the
training data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-train"></a>}}
\if{latex}{\out{\hypertarget{method-train}{}}}
\subsection{Method \code{train()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$train(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments affecting the inference calculations}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\if{latex}{\out{\hypertarget{method-predict}{}}}
\subsection{Method \code{predict()}}{
Characterize the posterior predictive distribution of the function
of interest at new test points.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$predict(newdata, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{newdata}}{A data frame containing the data for the new test
points}

\item{\code{...}}{Additional arguments affecting the predictions produced}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nlml"></a>}}
\if{latex}{\out{\hypertarget{method-nlml}{}}}
\subsection{Method \code{nlml()}}{
Caclulate the negative log marginal likelihood of the GP model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$nlml(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments affecting the calculation}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dnlml"></a>}}
\if{latex}{\out{\hypertarget{method-dnlml}{}}}
\subsection{Method \code{dnlml()}}{
Caclulate the gradient of the negative log marginal likelihood of
the GP model with respect to the hyperparameters of the mean,
covariance, and likelihood functions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$dnlml(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments affecting the calculation}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-margins"></a>}}
\if{latex}{\out{\hypertarget{method-margins}{}}}
\subsection{Method \code{margins()}}{
Caclulate marginal effects of predictors.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$margins(
  variables = NULL,
  base_categories = NULL,
  differences = NULL,
  indices = NULL,
  ci = 0.95,
  force = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{variables}}{A vector specifying the variables marginal effects
are desired for; can be an integer vector, giving the column
indices of X to get effects for, or a character vector;
if NULL (the default), effects are derived for all variables.}

\item{\code{base_categories}}{If X contains contrasts,
the marginal effects will be the differences between the levels
and a base level. By default, the base level is the lowest
factor level of the contrast, but you can pass a named list to
change the base level for some or all of the variables assigned
to a contrast scheme.}

\item{\code{differences}}{A named list of 2-length numeric vectors
may be provided giving the low (first element of each vector)
and high (second element) values to calculate the effect at for
continuous variables. Any elements giving values for binary or
categorical variables are ignored (this is meaningless for
binary variables as there are only two values to choose from,
and categorical variables should be controlled with the option
base_categories).
If NULL (the default), derivatives are used for marginal
effects of continuous predictors.}

\item{\code{indices}}{A numeric vector of indices over which to average
marginal effects. If NULL (the default), all observations are
used.}

\item{\code{ci}}{A numeric vector of length one such that 0 < ci < 1
giving the width of the confidence interval for the average
marginal effects. The default is 0.95, corresponding to a
95\% confidence interval.}

\item{\code{force}}{A logical vector of length one; should marginal effects
for variables who have already had effects calculated be
re-calculated? The default is FALSE. (This is useful in case the
user has requested effects for continuous variables be
calculated as differences but would now prefer derivatives,
or vice versa).}

\item{\code{...}}{Other arguments affecting the calculations (unused)}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The derivative of a GP is also a GP, giving us easy access to the
distribution of marginal effects of predictors. The first time this
method is called, it calculates and stores the distribution of
pointwise partial derivatives of \eqn{f} for each specified predictor
in the model (if no predictors are specified, marginal effects are
calculated for all predictors). If a predictor is binary, instead
the distribution of the difference in \eqn{f} between the predictor
taking the binary variable's highest value and its lowest value is
calculated. If a predictor is categorical, a similar calculation is
made, but comparing each of the labels except one to a baseline
label. The user may specify to use a similar calculation for two
user specified values for continuous variables rather than using
the partial derivatives (in some cases this may be more easily
interpretable). Additional calls to \code{margins()} may calculate
marginal effects for predictors whose marginal effects had not yet
been requested, but marginal effects for variables that have already
been calculated are not re-calculated unless \code{force = TRUE}.

Every time the method is called, it stores a dataframe of average
marginal effects; it calculates the mean and variance of the
marginal effect of each predictor over all observations, or over
specified indices of observations if provided.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GPR$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
